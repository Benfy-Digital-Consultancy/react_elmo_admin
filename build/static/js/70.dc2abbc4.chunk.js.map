{"version":3,"sources":["service/multipart.js"],"names":["requestMultipart","url","method","data","isLoader","Promise","resolve","reject","token","localStorage","getItem","config","process","headers","console","log","showLoader","axios","then","res","catch","response","status","message","Toast","type","useHistory","replace","Modal","render","defaultProps","setLoaderStatus"],"mappings":"+FAAA,6GAUaA,GAVb,KAUgC,SAAC,GAAD,IAC5BC,EAD4B,EAC5BA,IACAC,EAF4B,EAE5BA,OACAC,EAH4B,EAG5BA,KAH4B,IAI5BC,gBAJ4B,gBAK1B,IAAIC,SAAQ,SAACC,EAASC,GAExB,IAAIC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAS,CACTV,IAAKW,iCAAgCX,EACrCC,OAAQA,EACRC,KAAMA,GAAc,KACpBU,QAAS,CACL,cAAiBL,EAAQ,UAAYA,EAAQ,GAC7C,eAAgB,wBAIxBM,QAAQC,IAAIJ,EAAO,WACnBK,EAAWZ,GAEXa,IAAMN,GAAQO,MAAK,SAAAC,GAGf,OAFAL,QAAQC,IAAII,EAAI,YAChBH,GAAW,GACJV,EAAQa,MAChBC,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SAGR,GAFAP,QAAQC,IAAIM,EAAS,SACrBL,GAAW,GACRK,EAAS,CACR,IAAMC,EAAiBD,EAAjBC,OACAC,EADiBF,EAATlB,KACRoB,QAGN,GAFAC,gBAAM,CAAEC,KAAM,QAASF,QAASA,IAEjB,MAAXD,EACcI,cAENC,QAAQ,oBAIpBH,gBAAM,CAAEC,KAAM,QAASF,QAAS,2DAGpC,OAAOhB,EAAOc,WAOhBL,EAAW,SAACM,GACXM,WAASA,UAAMC,QAAWD,UAAMC,OAAOC,cACtCF,UAAMC,OAAOC,aAAaC,gBAAgBT","file":"static/js/70.dc2abbc4.chunk.js","sourcesContent":["import axios from \"axios\"\nimport { useHistory } from 'react-router-dom'\nimport { endpoints } from \"config/api\";\nimport { AxiosResponse, AxiosError } from 'axios'\nimport { Toast } from \"./toast\";\nimport Modal from \"component/modal\";\nimport React, { useContext, useRef } from \"react\";\n\n\n\nexport const requestMultipart = ({\n    url,\n    method,\n    data,\n    isLoader = true\n}) => new Promise((resolve, reject) => {\n\n    let token = localStorage.getItem('token');\n    let config = {\n        url: process.env.REACT_APP_API_URL + url,\n        method: method,\n        data: data ? data : null,\n        headers: {\n            'Authorization': token ? 'Bearer ' + token : '',\n            'Content-Type': 'multipart/form-data'\n        }\n    };\n\n    console.log(config,\"request\");\n    showLoader(isLoader)\n\n    axios(config).then(res => {\n        console.log(res,\"response\");\n        showLoader(false);\n        return resolve(res)\n    }).catch(({ response }) => {\n        console.log(response,\"error\");\n        showLoader(false);\n        if(response){\n            let { status, data } = response;\n            let { message } = data;\n            Toast({ type: \"error\", message: message });\n    \n            if (status === 401) {\n                let history = useHistory()\n                //clear and navigate to login\n                history.replace('/auth/login');\n    \n            }\n        }else{\n            Toast({ type: \"error\", message: 'Not able to connect the server. Please try again later' });\n        }\n       \n        return reject(response)\n    })\n\n\n});\n\n\nconst showLoader=(status)=>{\n    if(Modal && Modal.render &&  Modal.render.defaultProps){\n        Modal.render.defaultProps.setLoaderStatus(status)\n    }\n}"],"sourceRoot":""}