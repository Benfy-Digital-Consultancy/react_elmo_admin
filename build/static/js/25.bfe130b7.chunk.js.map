{"version":3,"sources":["component/Auth/Login/index.js","component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","component/common/PasswordInput/PasswordInputBox.js","component/common/ErrorMessage/index.js"],"names":["LoginComp","useForm","register","handleSubmit","errors","reset","useState","mailId","password","className","strings","elmo","onSubmit","inputs","console","log","request","url","endponts","Endpoints","login","method","APIMethods","POST","data","isLoader","then","res","localStorage","setItem","token","userData","JSON","stringify","history","push","type","value","placeholder","name","required","pattern","error","messages","inputProps","defaultChecked","color","to","href","loginButton","label","NormalButton","this","props","onClick","id","disabled","authButton","dasboardButton","outlineButton","outlineEditButton","rightIcon","Component","InputBox","onChange","maxlength","icons","GB","onWheel","ref","defaultValue","event","currentTarget","blur","PasswordInputBox","passwordType","setType","passwordText","setPasswordText","FormErrorMessage"],"mappings":"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","file":"static/js/25.bfe130b7.chunk.js","sourcesContent":["import Checkbox from '@mui/material/Checkbox';\nimport \"component/Auth/Login/style.scss\";\nimport FormErrorMessage from \"component/common/ErrorMessage\";\nimport InputBox from \"component/common/InputBox/InputBox\";\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\nimport PasswordInputBox from \"component/common/PasswordInput/PasswordInputBox\";\nimport { history } from \"helpers\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { request } from \"service\";\nimport endponts from \"service/endponts\";\nimport { strings } from \"service/helpers/Constants\";\n\nconst LoginComp = () => {\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [mailId, setmainId] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n\n\n\n\n  const onSubmit = (inputs) => {\n    console.log(inputs);\n    request({\n      url: endponts.Endpoints.login,\n      method: endponts.APIMethods.POST,\n      data: {\n        \"email\": inputs.mailId,\n        \"password\": inputs.password\n      },\n      isLoader : true\n    }).then(res => {\n      let {data} = res.data;\n      localStorage.setItem('token',data.token)\n      let userData = {\n          ...data.userData\n      }\n      localStorage.setItem('userData',JSON.stringify(userData))\n      history.push(\"/admin/dashboard\");\n    })\n  };\n\n\n\n  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\n\n\n\n  return (\n    <div>\n      <div className=\"container-fluid\">\n        <div className=\"row no-gutter\">\n          <div className=\"d-none d-md-flex col-md-4 col-lg-7 bg-image\"></div>\n          <div className=\"col-md-8 col-lg-5 bg_color\">\n            <div className=\"login d-flex align-items-center py-3\">\n              <div className=\"container\">\n                <div className=\"row py-5 text-center\">\n                  <div className=\"col-md-9 col-lg-8 mx-auto\"></div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-9 col-lg-8 mx-auto\">\n                    <h3 className=\"login-heading\">\n                      <span className=\"title_elmo\">{strings.elmo}</span>\n                      <span className=\"title_admin\">Admin</span>\n                    </h3>\n                    <p className=\"mb-4 text-muted discription\">\n                      Please provide the valid informations for a<br />\n                      seamless sign in process\n                    </p>\n                    <div className=\"blank mt-3 mb-3\" />\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div className=\"mt-5\">\n                        <label className=\"font-bold-16\">E-mail ID *</label>\n                        {/* <div className=\"input_field\"> */}\n                        <InputBox\n                          errors={errors}\n                          type={\"text\"}\n                          value={mailId}\n                          placeholder=\"test@gmail.com\"\n                          name=\"mailId\"\n                          register={register({\n                            required: true,\n                            pattern: /\\S+@\\S+\\.\\S+/,\n                          })}\n                        />\n                        {/* <div className=\"tick_icon\"><BsCheck size={25} /></div>\n                        </div> */}\n\n                        <FormErrorMessage\n                          error={errors.mailId}\n                          messages={{\n                            required: \"Please enter mail id\",\n                            pattern: \"Please enter a valid mail id\",\n                          }}\n                        />\n                      </div>\n                      <div className=\"mt-4\">\n                        <label className=\"font-bold-16\">Password *</label>\n                        {/* <div className=\"input_field\"> */}\n                        <PasswordInputBox\n                          errors={errors}\n                          value={password}\n                          placeholder=\"Enter Password\"\n                          type=\"password\"\n                          name=\"password\"\n                          register={register({\n                            required: true,\n                          })}\n                        />\n                        {/* <div><label className=\"show\" >Show</label></div>\n                        </div> */}\n                        <FormErrorMessage\n                          error={errors.password}\n                          messages={{\n                            required: \"Please enter password\",\n                          }}\n                        />\n                      </div>\n                      <div className=\"forgot\">\n                        <div><Checkbox {...label} defaultChecked color=\"success\" />\n                          <span className=\"small\">Remeber Me</span></div>\n                        <div>\n                          <Link to=\"/auth/forgot-password\">\n                            <span className=\"small\" href=\"#\">\n                              Forgot password?\n                            </span></Link></div>\n                      </div>\n                      <div className=\"mt-5\">\n                        <NormalButton loginButton label=\"Login\" />\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComp;\n","import React, { Component } from \"react\";\n// import styles from \"./button.module.scss\";\nimport \"./normalButton.scss\";\nexport class NormalButton extends Component {\n  render() {\n    const {\n      className = \"\",\n      label = \"\",\n      onClick,\n      id,\n      type = \"submit\",\n      disabled = false,\n      authButton = false,\n      loginButton = false,\n      dasboardButton = false,\n      outlineButton = false,\n      outlineEditButton = false,\n\n      rightIcon = \"\",\n    } = this.props;\n\n    return (\n      <div>\n        <button\n          id={id}\n          type={type}\n          className={`cursor-pointer \n                     ${authButton ? \"authButton\" : \"\"}\n                     ${loginButton ? \"loginButton\" : \"\"}\n                     ${dasboardButton ? \"dasboardButton\" : \"\"}\n                     ${outlineButton ? \"outlineButton\" : \"\"}\n                     ${outlineEditButton ? \"outlineEditButton\" : \"\"}\n\n                     ${className}`}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {label}\n          {rightIcon !== \"\" ? (\n            <span className={`btn-right-icon ${rightIcon}`}></span>\n          ) : null}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default NormalButton;\n","import React from \"react\";\nimport \"./InputBox.scss\";\n\nconst InputBox = (props) => {\n  let {\n    placeholder = \"\",\n    register = {},\n    value = \"\",\n    type = \"text\",\n    onChange,\n    name = \"\",\n    maxlength = \"\",\n    icons = false,\n    GB = false,\n    onWheel = \"\",\n  } = props;\n  return (\n    <>\n      <input\n        name={name}\n        placeholder={placeholder}\n        className={\"inputBoxStyle\"}\n        ref={register}\n        defaultValue={value}\n        type={type}\n        maxlength={maxlength}\n        onWheel={(event) => event.currentTarget.blur()}\n        // onChange={(e) => {\n        //     let body = {};\n\n        //     body = {\n        //         target: {\n        //             name: e.target.name,\n        //             value: e.target.value,\n        //         },\n        //     };\n\n        //     onChange(body);\n        // }}\n      />\n    </>\n  );\n};\nexport default InputBox;\n","import React, { useState } from \"react\";\nimport \"./PasswordInputBox.scss\";\n\nconst PasswordInputBox = (props) => {\n  let {\n    placeholder = \"\",\n    register = {},\n    value = \"\",\n    type = \"password\",\n    onChange,\n    name = \"\",\n    maxlength = \"\",\n    icons = false,\n    GB = false,\n    onWheel = \"\",\n  } = props;\n\n\n  const [passwordType,setType] = useState(\"password\")\n  const [passwordText,setPasswordText] = useState(\"Show\")\n\n  const onClickShow = () =>{\n    if(passwordType == \"password\"){\n      setType(\"text\");\n      setPasswordText(\"Hide\")\n    }else{\n      setType(\"password\");\n      setPasswordText(\"Show\")\n    }\n  }\n  return (\n    <div className=\"inputBoxContainer\">\n      <input\n        name={name}\n        placeholder={placeholder}\n        ref={register}\n        defaultValue={value}\n        className={\"inputBoxStyless\"}\n        type={passwordType}\n        maxlength={maxlength}\n        onWheel={(event) => event.currentTarget.blur()}\n        // onChange={(e) => {\n        //     let body = {};\n\n        //     body = {\n        //         target: {\n        //             name: e.target.name,\n        //             value: e.target.value,\n        //         },\n        //     };\n\n        //     onChange(body);\n        // }}\n      />\n      <p onClick={onClickShow} className=\"mt-3 mr-2\">{passwordText}</p>\n    </div>\n  );\n};\nexport default PasswordInputBox;\n","import React from \"react\";\n\nconst FormErrorMessage = ({ error, type, messages }) => {\n  if (!error) return null;\n\n  return (\n    <span className=\"text-danger fs-13\">\n      {messages[error.type] ? messages[error.type] : \"Error in field\"}\n    </span>\n  );\n};\nexport default FormErrorMessage;\n"],"sourceRoot":""}