{"version":3,"sources":["component/Auth/ForgotPassword/index.js","component/common/NormalButton/NormalButton.js","component/common/InputBox/InputBox.js","component/common/ErrorMessage/index.js","component/common/AppBack/index.js"],"names":["ForgotPassword","useForm","register","handleSubmit","errors","reset","useState","mailId","className","strings","elmo","onSubmit","inputs","currentDate","moment","utcOffset","format","request","url","endponts","Endpoints","forgotPassword","method","APIMethods","POST","data","email","requestedDateTime","then","history","push","pathname","state","type","value","placeholder","name","required","pattern","error","messages","onClick","goBack","label","loginButton","NormalButton","this","props","id","disabled","authButton","dasboardButton","outlineButton","outlineEditButton","rightIcon","Component","InputBox","onChange","maxlength","icons","GB","onWheel","ref","defaultValue","event","currentTarget","blur","FormErrorMessage","AppBack","color"],"mappings":"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","file":"static/js/24.9e58604f.chunk.js","sourcesContent":["import { history } from \"helpers\";\nimport React, { useState } from \"react\";\nimport \"component/Auth/ForgotPassword/styles.scss\";\nimport InputBox from \"component/common/InputBox/InputBox\";\nimport { useForm } from \"react-hook-form\";\nimport FormErrorMessage from \"component/common/ErrorMessage\";\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { strings } from \"service/helpers/Constants\";\nimport { BsCheck } from \"react-icons/bs\";\nimport { AppBack } from \"component/common/AppBack\";\nimport { Link } from \"react-router-dom\";\nimport { request } from \"service\";\nimport endponts from \"service/endponts\";\nimport moment from \"moment\";\n\n\nconst ForgotPassword = () => {\n    const { register, handleSubmit, errors, reset } = useForm();\n    const [mailId, setmainId] = useState(\"\");\n    const [password, setpassword] = useState(\"\");\n\n    const onSubmit = (inputs) => {\n        let currentDate = moment().utcOffset('+05:30').format(\"DD-MM-YYYY hh:mm:ss\")\n        request({\n            url: endponts.Endpoints.forgotPassword,\n            method:endponts.APIMethods.POST,\n            data:{\n                email:inputs.mailId,\n                requestedDateTime:currentDate\n            }\n        }).then(()=>{\n\n            history.push({\n                    pathname: \"/auth/verification\",\n                    state: { email: inputs.mailId }\n                });\n        })\n\n    };\n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n    return (\n        <div>\n            <div className=\"container-fluid\">\n                <div className=\"row no-gutter\">\n                    <div className=\"d-none d-md-flex col-md-4 col-lg-7 bg-image\"></div>\n                    <div className=\"col-md-8 col-lg-5 bg_color\">\n                        <div className=\"login d-flex align-items-center py-3\">\n                            <div className=\"container\">\n                                <div className=\"row py-5 text-center\">\n                                    <div className=\"col-md-9 col-lg-8 mx-auto\"></div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-9 col-lg-8 mx-auto\">\n                                        <h3 className=\"login-heading\">\n                                            <span className=\"title_elmo\">{strings.elmo}</span>\n                                            <span className=\"title_admin\">Admin</span>\n                                        </h3>\n                                        <label className=\"font-bold-20 forgot_lable\">Forgot Password</label>\n                                        <p className=\"mb-4 text-muted discription\">\n                                            Weâ€™ll send a Verification Code to your<br />\n                                            Email ID\n                                        </p>\n                                        <div className=\"blank mt-3 mb-3\" />\n                                        <form onSubmit={handleSubmit(onSubmit)}>\n                                            <div className=\"mt-5\">\n                                                <label className=\"font-bold-16\">E-mail ID *</label>\n                                                {/* <div className=\"input_field\"> */}\n                                                <InputBox\n                                                    errors={errors}\n                                                    type={\"text\"}\n                                                    value={mailId}\n                                                    placeholder=\"test@gmail.com\"\n                                                    name=\"mailId\"\n                                                    register={register({\n                                                        required: true,\n                                                        pattern: /\\S+@\\S+\\.\\S+/,\n                                                    })}\n                                                />\n                                                {/* <div className=\"tick_icon\"><BsCheck size={25} /></div>\n                        </div> */}\n\n                                                <FormErrorMessage\n                                                    error={errors.mailId}\n                                                    messages={{\n                                                        required: \"Mail ID is required\",\n                                                        pattern: \"Invalid Mail ID\",\n                                                    }}\n                                                />\n                                            </div>\n                                            <div>\n                                                <AppBack onClick={() => history.goBack()} label=\"Back to Login\" />\n                                            </div>\n                                            <div className=\"mt-5\">\n                                                    <NormalButton loginButton label=\"Submit\" />\n                                            </div>\n\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ForgotPassword;\n","import React, { Component } from \"react\";\n// import styles from \"./button.module.scss\";\nimport \"./normalButton.scss\";\nexport class NormalButton extends Component {\n  render() {\n    const {\n      className = \"\",\n      label = \"\",\n      onClick,\n      id,\n      type = \"submit\",\n      disabled = false,\n      authButton = false,\n      loginButton = false,\n      dasboardButton = false,\n      outlineButton = false,\n      outlineEditButton = false,\n\n      rightIcon = \"\",\n    } = this.props;\n\n    return (\n      <div>\n        <button\n          id={id}\n          type={type}\n          className={`cursor-pointer \n                     ${authButton ? \"authButton\" : \"\"}\n                     ${loginButton ? \"loginButton\" : \"\"}\n                     ${dasboardButton ? \"dasboardButton\" : \"\"}\n                     ${outlineButton ? \"outlineButton\" : \"\"}\n                     ${outlineEditButton ? \"outlineEditButton\" : \"\"}\n\n                     ${className}`}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {label}\n          {rightIcon !== \"\" ? (\n            <span className={`btn-right-icon ${rightIcon}`}></span>\n          ) : null}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default NormalButton;\n","import React from \"react\";\nimport \"./InputBox.scss\";\n\nconst InputBox = (props) => {\n  let {\n    placeholder = \"\",\n    register = {},\n    value = \"\",\n    type = \"text\",\n    onChange,\n    name = \"\",\n    maxlength = \"\",\n    icons = false,\n    GB = false,\n    onWheel = \"\",\n  } = props;\n  return (\n    <>\n      <input\n        name={name}\n        placeholder={placeholder}\n        className={\"inputBoxStyle\"}\n        ref={register}\n        defaultValue={value}\n        type={type}\n        maxlength={maxlength}\n        onWheel={(event) => event.currentTarget.blur()}\n        // onChange={(e) => {\n        //     let body = {};\n\n        //     body = {\n        //         target: {\n        //             name: e.target.name,\n        //             value: e.target.value,\n        //         },\n        //     };\n\n        //     onChange(body);\n        // }}\n      />\n    </>\n  );\n};\nexport default InputBox;\n","import React from \"react\";\n\nconst FormErrorMessage = ({ error, type, messages }) => {\n  if (!error) return null;\n\n  return (\n    <span className=\"text-danger fs-13\">\n      {messages[error.type] ? messages[error.type] : \"Error in field\"}\n    </span>\n  );\n};\nexport default FormErrorMessage;\n","import React from \"react\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport \"./style.scss\";\n\nexport const AppBack = ({ onClick = {}, label }) => {\n  return (\n    <div className=\"app-back\">\n      <div className=\"content-title\">\n        <div\n          className=\"d-flex align-items-center cursor-pointer\"\n          onClick={() => onClick()}\n        >\n          <BsArrowLeft color=\"#208e5as\" />\n          <span className=\"font-bold-16\">{label}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}