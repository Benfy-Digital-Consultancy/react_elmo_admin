{"version":3,"sources":["component/common/InputBox/InputBox.js","component/common/NormalButton/NormalButton.js","component/common/ErrorMessage/index.js","component/Auth/Login/index.js"],"names":["InputBox","props","placeholder","register","value","type","onChange","name","maxlength","icons","GB","onWheel","className","ref","defaultValue","event","currentTarget","blur","NormalButton","this","label","onClick","id","disabled","authButton","loginButton","rightIcon","Component","FormErrorMessage","error","messages","LoginComp","useForm","handleSubmit","errors","reset","useState","mailId","password","strings","elmo","onSubmit","inputs","history","push","err","required","pattern","inputProps","defaultChecked","color","href"],"mappings":"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","file":"static/js/5.4b5bd337.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./InputBox.scss\";\n\nconst InputBox = (props) => {\n  let {\n    placeholder = \"\",\n    register = {},\n    value = \"\",\n    type = \"text\",\n    onChange,\n    name = \"\",\n    maxlength = \"\",\n    icons = false,\n    GB = false,\n    onWheel = \"\",\n  } = props;\n  return (\n    <>\n      <input\n        name={name}\n        placeholder={placeholder}\n        className={\"inputBoxStyle\"}\n        ref={register}\n        defaultValue={value}\n        type={type}\n        maxlength={maxlength}\n        onWheel={(event) => event.currentTarget.blur()}\n        // onChange={(e) => {\n        //     let body = {};\n\n        //     body = {\n        //         target: {\n        //             name: e.target.name,\n        //             value: e.target.value,\n        //         },\n        //     };\n\n        //     onChange(body);\n        // }}\n      />\n    </>\n  );\n};\nexport default InputBox;\n","import React, { Component } from \"react\";\n// import styles from \"./button.module.scss\";\nimport \"./normalButton.scss\";\nexport class NormalButton extends Component {\n  render() {\n    const {\n      className = \"\",\n      label = \"\",\n      onClick,\n      id,\n      type = \"submit\",\n      disabled = false,\n      authButton = false,\n      loginButton = false,\n      rightIcon = \"\",\n    } = this.props;\n\n    return (\n      <div>\n        <button\n          id={id}\n          type={type}\n          className={`cursor-pointer \n                     ${authButton ? \"authButton\" : \"\"}\n                     ${loginButton ? \"loginButton\" : \"\"}\n\n                     ${className}`}\n          onClick={onClick}\n          disabled={disabled}\n        >\n          {label}\n          {rightIcon !== \"\" ? (\n            <span className={`btn-right-icon ${rightIcon}`}></span>\n          ) : null}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default NormalButton;\n","import React from \"react\";\n\nconst FormErrorMessage = ({ error, type, messages }) => {\n  if (!error) return null;\n\n  return (\n    <span className=\"text-danger fs-13\">\n      {messages[error.type] ? messages[error.type] : \"Error in field\"}\n    </span>\n  );\n};\nexport default FormErrorMessage;\n","import { history } from \"helpers\";\nimport React, { useState } from \"react\";\nimport \"component/Auth/Login/style.scss\";\nimport InputBox from \"component/common/InputBox/InputBox\";\nimport { useForm } from \"react-hook-form\";\nimport FormErrorMessage from \"component/common/ErrorMessage\";\nimport NormalButton from \"component/common/NormalButton/NormalButton\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { strings } from \"service/helpers/Constants\";\n\nconst LoginComp = () => {\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [mailId, setmainId] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n\n  const onSubmit = (inputs) => {\n    try {\n      history.push(\"/admin/dashboard\");\n    } catch (err) { }\n  };\n  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n  return (\n    <div>\n      <div className=\"container-fluid\">\n        <div className=\"row no-gutter\">\n          <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\n          <div className=\"col-md-8 col-lg-6\">\n            <div className=\"login d-flex align-items-center py-3\">\n              <div className=\"container\">\n                <div className=\"row py-5 text-center\">\n                  <div className=\"col-md-9 col-lg-8 mx-auto\"></div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-9 col-lg-8 mx-auto\">\n                    <h3 className=\"login-heading\">\n                      <span className=\"title_elmo\">{strings.elmo}</span>\n                      <span className=\"title_admin\">Admin</span>\n                    </h3>\n                    <p className=\"mb-4 text-muted discription\">\n                      Please provide the valid informations for a<br />\n                      seamless sign in process\n                    </p>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div className=\"mt-5\">\n                        <InputBox\n                          errors={errors}\n                          type={\"text\"}\n                          value={mailId}\n                          placeholder=\"Official mail ID\"\n                          name=\"mailId\"\n                          register={register({\n                            required: true,\n                            pattern: /\\S+@\\S+\\.\\S+/,\n                          })}\n                        />\n                        <FormErrorMessage\n                          error={errors.mailId}\n                          messages={{\n                            required: \"Mail ID is required\",\n                            pattern: \"Invalid Mail ID\",\n                          }}\n                        />\n                      </div>\n                      <div className=\"mt-4\">\n                        <InputBox\n                          errors={errors}\n                          value={password}\n                          placeholder=\"Password\"\n                          type=\"password\"\n                          name=\"password\"\n                          register={register({\n                            required: true,\n                          })}\n                        />\n                        <FormErrorMessage\n                          error={errors.password}\n                          messages={{\n                            required: \"Password is required\",\n                          }}\n                        />\n                      </div>\n                      <div className=\" forgot\">\n                        <div><Checkbox {...label} defaultChecked color=\"success\" />\n                          <span className=\"small\">Remeber Me</span></div>\n                        <div><span className=\"small\" href=\"#\">\n                          Forgot password?\n                        </span></div>\n                      </div>\n                      <div className=\"mt-5\">\n                        <NormalButton loginButton label=\"login\" />\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComp;\n"],"sourceRoot":""}